<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>133, 17</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>248, 17</value>
  </metadata>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>335, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>